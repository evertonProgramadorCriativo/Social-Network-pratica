@charset "UTF-8";
/*Cores

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485


*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px); }
  80% {
    transform: translateX(10px); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateY(30px); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBotton {
  0% {
    opacity: 0;
    transform: translateY(30px); }
  100% {
    opacity: 1;
    transform: translate(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 60px;
  /*animation-timing-function: ease-out;*/ }
  .heading-primary--main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name: moveInLeft;
    animation-duration: 4s;
    animation-delay: 2s;
    animation-iteration-count: 2; }
  .heading-primary--sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation: moveInRight  1s ease-out; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(47, 153, 28, 0.5), #28b485), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /*clip-path: polygon(x y , x y, x y);*/
  /* clip-path: polygon(0 0, x y, x y);*/
  /* clip-path: polygon(0 0, 100% 0, x y);*/
  /*clip-path: polygon(0 0, 100% 0, 100% 200px);
   
   ------------------------------------
   https://bennettfeely.com/clippy/
   ------------------------------------
   */
  /* clip-path: polygon(0 0, 100% 0, 100% 200px, 0 100%); */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 70px;
    left: 70px; }
  .header__logo {
    height: 35px; }
  .header__text-box {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 115rem;
  background-color: #eee;
  margin: 0 auto;
  /*margin para  todas as linhas(row) exceto para ultima linha 
                
                &:not(last-child) {
                margin-bottom: $gutter-vertical;
            }
                
                */
  /*trabalhando com colunas
                    col-1-of-2

                a coluna sempre vai esta dentro de uma linha ( $grid-width),
                agora como podemos definir a largura dessa coluna?
                e toda largura dessa linha  menis essa sarjeta , esse espaço aqui 
                divido por dois

                $gutter-horizontal  -> espaço da sarjeta ou calha  $gutter-horizantal: 6rem;

                    100% -> tamanho da linha 
                    - 6rem espaço entre as linhas
                    para funcionar a variavel
                        width: calc(( 100% - $gutter-horizantal) / 2) 

                */
  /*
    100% tamanho da linha
    - 2* gutter-horizantal  2 espaços entre as 3 colunas  en divido por 3 para gera as 3 colunas
    */ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    background-color: red;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc(( 100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 *  6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all .2s;
  position: relative; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--animated {
  animation: moveInBotton 0.5s ease-out 0.75s;
  animation-fill-mode: backwards; }
